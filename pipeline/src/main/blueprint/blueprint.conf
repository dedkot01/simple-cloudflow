blueprint {
  streamlets {
    ingress = org.dedkot.FilesIngress
    validate-subscription-data = org.dedkot.ValidateSubscriptionData
    aggregation = org.dedkot.Aggregation
    data-store = org.dedkot.DataStore

    status-collector = org.dedkot.StatusCollector
  }
  topics {
    input-data {
      producers = [ingress.data-out]
      consumers = [validate-subscription-data.in]
    }
    subscription-data {
      producers = [validate-subscription-data.valid-out]
      consumers = [aggregation.in]
    }
    aggregation-data {
      producers = [aggregation.out]
      consumers = [data-store.in]
    }

    file-fail-status {
      producers = [ingress.file-fail-status-out]
      consumers = [status-collector.file-fail-status-in]
    }
    record-fail-status {
      producers = [validate-subscription-data.record-fail-status-out]
      consumers = [status-collector.record-fail-status-in]
    }
    record-success-status {
      producers = [validate-subscription-data.record-success-status-out]
      consumers = [status-collector.record-success-status-in]
    }
  }
}
